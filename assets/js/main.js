!function(){"use strict";var __webpack_modules__={"./src/js/main.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _module_wp_add_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./module/wp-add-class */ "./src/js/module/wp-add-class.js");\n/* harmony import */ var _module_wp_correction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./module/wp-correction */ "./src/js/module/wp-correction.js");\n/* harmony import */ var _module_bodyScroll__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./module/bodyScroll */ "./src/js/module/bodyScroll.js");\n/* harmony import */ var _module_dropdown__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./module/dropdown */ "./src/js/module/dropdown.js");\n/* harmony import */ var _module_hamburger_and_drawer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./module/hamburger-and-drawer */ "./src/js/module/hamburger-and-drawer.js");\n/* harmony import */ var _module_pagetop__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./module/pagetop */ "./src/js/module/pagetop.js");\n/* harmony import */ var _module_tab__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./module/tab */ "./src/js/module/tab.js");\n/* harmony import */ var _module_accordion__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./module/accordion */ "./src/js/module/accordion.js");\n/* harmony import */ var _module_modal__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./module/modal */ "./src/js/module/modal.js");\n/* harmony import */ var _module_loading__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./module/loading */ "./src/js/module/loading.js");\n/* harmony import */ var _module_plugin__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./module/plugin */ "./src/js/module/plugin.js");\n\r\n\r\n//WP用 クラスを与える\r\n\r\n(0,_module_wp_add_class__WEBPACK_IMPORTED_MODULE_0__.wpAddClass)();\r\n\r\n//WP用 仕様を補正する\r\n\r\n(0,_module_wp_correction__WEBPACK_IMPORTED_MODULE_1__.wpCorrection)();\r\n\r\n//bodyのスクロール制御\r\n\r\n(0,_module_bodyScroll__WEBPACK_IMPORTED_MODULE_2__.bodyScroll)();\r\n\r\n//ドロップダウン\r\n\r\n(0,_module_dropdown__WEBPACK_IMPORTED_MODULE_3__.dropdown)();\r\n\r\n//ハンバーガー＆ドロワー\r\n\r\n(0,_module_hamburger_and_drawer__WEBPACK_IMPORTED_MODULE_4__.hamburgerAndDrawer)();\r\n\r\n//ページトップ\r\n\r\n(0,_module_pagetop__WEBPACK_IMPORTED_MODULE_5__.pagetop)();\r\n\r\n//タブ\r\n\r\n(0,_module_tab__WEBPACK_IMPORTED_MODULE_6__.tab)();\r\n\r\n//アコーディオン\r\n\r\n(0,_module_accordion__WEBPACK_IMPORTED_MODULE_7__.accordion)();\r\n\r\n//モーダル\r\n\r\n(0,_module_modal__WEBPACK_IMPORTED_MODULE_8__.modal)();\r\n\r\n//ローディング\r\n\r\n(0,_module_loading__WEBPACK_IMPORTED_MODULE_9__.loading)();\r\n\r\n//プラグイン\r\n\r\n(0,_module_plugin__WEBPACK_IMPORTED_MODULE_10__.plugin)();\r\n\n\n//# sourceURL=webpack://wordpress_test/./src/js/main.js?')},"./src/js/module/accordion.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   accordion: function() { return /* binding */ accordion; }\n/* harmony export */ });\n/*********************************\r\n    アコーディオン\r\n*********************************/\r\n\r\nfunction accordion() {\r\n\r\n    // アコーディオンを開く関数\r\n    function slideDown(el, duration = 300) {\r\n        el.classList.add('accordion__body--active');\r\n        el.style.overflow = 'hidden';\r\n        el.style.height = 'auto';\r\n        let h = el.offsetHeight;\r\n        let pt = window.getComputedStyle(el).paddingTop;\r\n        let pb = window.getComputedStyle(el).paddingBottom;\r\n        el.style.paddingTop = pt;\r\n        el.style.paddingBottom = pb;\r\n        el.animate({\r\n            height: ['0', h + 'px'],\r\n            paddingTop: ['0', pt],\r\n            paddingBottom: ['0', pb],\r\n        }, duration);\r\n        setTimeout(() => {\r\n            el.style.removeProperty('overflow');\r\n            el.style.removeProperty('height');\r\n            el.style.removeProperty('padding-top');\r\n            el.style.removeProperty('padding-bottom');\r\n        }, duration);\r\n    }\r\n    \r\n    // アコーディオンを閉じる関数\r\n    function slideUp(el, duration = 300) {\r\n        el.style.overflow = 'hidden';\r\n        let h = el.offsetHeight;\r\n        el.style.height = 0;\r\n        let pt = window.getComputedStyle(el).paddingTop;\r\n        let pb = window.getComputedStyle(el).paddingBottom;\r\n        el.style.paddingTop = 0;\r\n        el.style.paddingBottom = 0;\r\n        el.animate({\r\n            height: [h + 'px', '0'],\r\n            paddingTop: [pt, '0'],\r\n            paddingBottom: [pb, '0'],\r\n        }, duration);\r\n        setTimeout(() => {\r\n            el.style.removeProperty('overflow');\r\n            el.style.removeProperty('height');\r\n            el.style.removeProperty('padding-top');\r\n            el.style.removeProperty('padding-bottom');\r\n            el.classList.remove('accordion__body--active');\r\n        }, duration);\r\n    }\r\n\r\n    // アコーディオン開閉の処理\r\n    const accordions = document.querySelectorAll('.js_accordion');\r\n    accordions.forEach(function(accordion, index) {\r\n\r\n        const accordionBtn = accordion.querySelector('.js_accordion_button');\r\n        accordionBtn.onclick = function() {\r\n\r\n            const accordionBody = this.nextElementSibling;\r\n            if(accordionBody.classList.contains('accordion__body--active')){\r\n                slideUp(accordionBody);\r\n                this.classList.remove('accordion__button--active');\r\n            } else {\r\n                slideDown(accordionBody);\r\n                this.classList.add('accordion__button--active');\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n}\n\n//# sourceURL=webpack://wordpress_test/./src/js/module/accordion.js?")},"./src/js/module/bodyScroll.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bodyScroll: function() { return /* binding */ bodyScroll; }\n/* harmony export */ });\n/*********************************\r\n    bodyのスクロール制御\r\n*********************************/\r\n\r\nfunction bodyScroll() {\r\n\r\n    //iOSか判定\r\n    const ua = window.navigator.userAgent.toLowerCase();\r\n    const iOS = ua.indexOf('iphone') > -1 || ua.indexOf('ipad') > -1 || ua.indexOf('macintosh') > -1 && 'ontouchend' in document;\r\n\r\n    //スクロールバーがあるか判定\r\n    const scrollBarJudg = (window.innerWidth - document.body.clientWidth) > 0;\r\n\r\n    //bodyのスクロールを止める関数\r\n    function bodyScrollStop(){\r\n        if (iOS) {\r\n            const windowScroll = window.scrollY;\r\n            document.body.style.position = 'fixed';\r\n            document.body.style.top = `-${windowScroll}px`;\r\n            document.body.style.width = '100%';\r\n        } else if(scrollBarJudg) {\r\n            const windowScroll = window.scrollY;\r\n            document.body.style.position = 'fixed';\r\n            document.body.style.top = `-${windowScroll}px`;\r\n            document.body.style.width = '100%';\r\n            document.querySelector('html').style.overflowY = 'scroll';\r\n        } else {\r\n            document.body.style.overflow = 'hidden';\r\n        }\r\n    }\r\n    \r\n    //bodyのスクロールを始める関数\r\n    function bodyScrollStart(){\r\n        if (iOS) {\r\n            const bodyTop = document.body.style.top;\r\n            document.body.style.removeProperty('position');\r\n            document.body.style.removeProperty('top');\r\n            document.body.style.removeProperty('width');\r\n            window.scrollTo(0, parseInt(bodyTop) * -1);\r\n        } else if(scrollBarJudg) {\r\n            const bodyTop = document.body.style.top;\r\n            document.body.style.removeProperty('position');\r\n            document.body.style.removeProperty('top');\r\n            document.body.style.removeProperty('width');\r\n            window.scrollTo(0, parseInt(bodyTop) * -1);\r\n            document.querySelector('html').style.removeProperty('overflow-y');\r\n        } else {\r\n            document.body.style.removeProperty('overflow');\r\n        }\r\n    }\r\n\r\n    window.globalFunction = {};\r\n    window.globalFunction.bodyScrollStop = bodyScrollStop;\r\n    window.globalFunction.bodyScrollStart = bodyScrollStart;\r\n\r\n}\n\n//# sourceURL=webpack://wordpress_test/./src/js/module/bodyScroll.js?")},"./src/js/module/dropdown.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dropdown: function() { return /* binding */ dropdown; }\n/* harmony export */ });\n/*********************************\r\n    ドロップダウン\r\n*********************************/\r\n\r\nfunction dropdown() {\r\n\r\n    const dropdown = document.querySelector('.js_dropdown');\r\n\r\n    // 子メニューを全て閉じる関数\r\n    function childAllClose(){\r\n        const childActives = dropdown.querySelectorAll('.dropdown__child--active');\r\n        childActives.forEach(function(childActive, index) {\r\n            childActive.classList.remove('dropdown__child--active');\r\n        });\r\n    }\r\n\r\n    // 孫メニューを全て閉じる関数\r\n    function grandchildAllClose(){\r\n        const grandchildActives = dropdown.querySelectorAll('.dropdown__grandchild--active');\r\n        grandchildActives.forEach(function(grandchildActive, index) {\r\n            grandchildActive.classList.remove('dropdown__grandchild--active');\r\n        });\r\n    }\r\n\r\n    // 子メニューを展開するボタンの処理\r\n    const parentBtns = dropdown.querySelectorAll('.js_dropdown_link_parent');\r\n    parentBtns.forEach(function(parentBtn, index) {\r\n\r\n        parentBtn.onclick = function(e) {\r\n\r\n            const childActive = this.nextElementSibling.classList.contains('dropdown__child--active');\r\n            if (!childActive){\r\n\r\n                childAllClose();\r\n                this.nextElementSibling.classList.add('dropdown__child--active');\r\n\r\n            } else {\r\n\r\n                this.nextElementSibling.classList.remove('dropdown__child--active');\r\n\r\n            }\r\n\r\n        }\r\n\r\n        parentBtn.addEventListener('mouseover', function (e) {\r\n\r\n            const childActive = this.nextElementSibling.classList.contains('dropdown__child--active');\r\n            if (!childActive){\r\n\r\n                const childActives = dropdown.querySelectorAll('.dropdown__child--active');\r\n                childActives.forEach(function(childActive, index) {\r\n                    childActive.classList.remove('dropdown__child--active');\r\n                });\r\n\r\n                if(childActives.length !== 0){\r\n\r\n                    parentBtns.forEach(function(parentBtn, index) {\r\n                        parentBtn.blur();\r\n                    });\r\n\r\n                    this.focus();\r\n                    \r\n                    this.nextElementSibling.classList.add('dropdown__child--active');\r\n\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n        parentBtn.addEventListener('keydown', (e) => {\r\n\r\n            if(e.key == 'Enter') {\r\n                           \r\n                const childActive = parentBtn.nextElementSibling.classList.contains('dropdown__child--active');\r\n                if (!childActive){\r\n\r\n                    childAllClose();\r\n                    parentBtn.nextElementSibling.classList.add('dropdown__child--active');\r\n\r\n                } else {\r\n\r\n                    parentBtn.nextElementSibling.classList.remove('dropdown__child--active');\r\n\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n    });\r\n    \r\n    // 孫メニューを展開するボタンの処理\r\n    const childParentBtns = dropdown.querySelectorAll('.js_dropdown_child_parent');\r\n    childParentBtns.forEach(function(childParentBtn, index) {\r\n\r\n        childParentBtn.parentNode.addEventListener('mouseover', function (e) {\r\n            childParentBtn.focus();\r\n            childParentBtn.nextElementSibling.classList.add('dropdown__grandchild--active');\r\n        });\r\n\r\n        childParentBtn.parentNode.addEventListener('mouseleave', function (e) {\r\n            childParentBtn.blur();\r\n            childParentBtn.nextElementSibling.classList.remove('dropdown__grandchild--active');\r\n        });\r\n\r\n        childParentBtn.addEventListener('keydown', (e) => {\r\n\r\n            if (e.key == 'Enter') {\r\n\r\n                const grandchildActive = childParentBtn.nextElementSibling.classList.contains('dropdown__grandchild--active');\r\n                if(!grandchildActive){\r\n    \r\n                    grandchildAllClose();\r\n                    childParentBtn.nextElementSibling.classList.add('dropdown__grandchild--active');\r\n    \r\n                } else {\r\n\r\n                    childParentBtn.nextElementSibling.classList.remove('dropdown__grandchild--active');\r\n    \r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n    });\r\n\r\n    // フォーカスの処理\r\n    const focusBtns = dropdown.querySelectorAll('a');\r\n    focusBtns.forEach(function(focusBtn, index) {\r\n\r\n        focusBtn.addEventListener('focus', function (e) {\r\n\r\n            const linkParent = this.classList.contains('js_dropdown_link_parent');\r\n            const childParent = this.classList.contains('js_dropdown_child_parent');\r\n            const childActive = this.closest('.dropdown__child--active');\r\n            const grandchildActive = this.closest('.dropdown__grandchild--active');\r\n            if (linkParent) {\r\n\r\n                const childActive = this.nextElementSibling.classList.contains('dropdown__child--active');\r\n                if (!childActive){\r\n\r\n                    childAllClose();\r\n\r\n                }\r\n\r\n            } else if  (childParent) {\r\n\r\n                const grandchildActive = this.nextElementSibling.classList.contains('dropdown__grandchild--active');\r\n                if (!grandchildActive){\r\n\r\n                    grandchildAllClose();\r\n\r\n                }\r\n\r\n            } else if  (!childActive) {\r\n\r\n                childAllClose();\r\n                grandchildAllClose();\r\n\r\n            } else if (!grandchildActive) {\r\n\r\n                grandchildAllClose();\r\n            }\r\n        \r\n        }); \r\n\r\n    });\r\n    \r\n    \r\n    // ドロップダウン範囲外をクリックで子＆孫メニューを閉じる処理\r\n    document.addEventListener('click', (e) => {\r\n        \r\n        if (!e.target.closest('.js_dropdown')) {\r\n    \r\n            childAllClose();\r\n            grandchildAllClose();\r\n    \r\n        }\r\n\r\n    });\r\n\r\n    //ウィンドウリサイズの処理\r\n    window.addEventListener('resize',function(){\r\n\r\n        if (window.matchMedia('(max-width:991.98px)').matches) {\r\n    \r\n            childAllClose();\r\n            grandchildAllClose();\r\n    \r\n        }\r\n    \r\n    });\r\n    \r\n}\n\n//# sourceURL=webpack://wordpress_test/./src/js/module/dropdown.js?")},"./src/js/module/hamburger-and-drawer.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hamburgerAndDrawer: function() { return /* binding */ hamburgerAndDrawer; }\n/* harmony export */ });\n/*********************************\r\n    ハンバーガー＆ドロワー\r\n*********************************/\r\n\r\nfunction hamburgerAndDrawer() {\r\n    \r\n    const hamburger = document.querySelector('.js_header_hamburger');\r\n    const drawer = document.querySelector('.js_drawer');\r\n    const overlay = document.querySelector('.js_drawer-overlay');\r\n    let drawerWidth = 0;\r\n    let childWidth = 0;\r\n    let grandchildWidth = 0;\r\n    const duration = 300;\r\n\r\n    //ドロワーを開く関数\r\n    function drawerOpen(){\r\n        drawerWidth = drawer.getBoundingClientRect().width;\r\n        drawer.style.transitionProperty = 'right';\r\n        drawer.style.transitionDuration = duration + 'ms';\r\n        hamburger.classList.add('header__hamburger--active');\r\n        drawer.classList.add('drawer--active')\r\n        drawer.style.right = drawerWidth - 1 + 'px';\r\n        overlay.classList.add('drawer-overlay--active');\r\n        window.globalFunction.bodyScrollStop();\r\n        document.querySelector('.wrapper').inert = true;\r\n        document.querySelector('.footer').inert = true;\r\n        setTimeout(() => {\r\n            drawer.style.removeProperty('transition-property');\r\n            drawer.style.removeProperty('transition-duration');\r\n        }, duration);\r\n    }\r\n    \r\n    //ドロワーを閉じる関数\r\n    function drawerClose(){\r\n        drawerWidth = drawer.getBoundingClientRect().width;\r\n        drawer.style.transitionProperty = 'right';\r\n        drawer.style.transitionDuration = duration + 'ms';\r\n        hamburger.classList.remove('header__hamburger--active');\r\n        drawer.style.right = 0;\r\n        overlay.classList.remove('drawer-overlay--active');\r\n        window.globalFunction.bodyScrollStart();\r\n        document.querySelector('.wrapper').inert = false;\r\n        document.querySelector('.footer').inert = false;\r\n        setTimeout(() => {\r\n            drawer.style.removeProperty('transition-property');\r\n            drawer.style.removeProperty('transition-duration');\r\n            drawer.classList.remove('drawer--active')\r\n        }, duration);\r\n    }\r\n\r\n    //子メニューを開く関数\r\n    function childOpen(){\r\n        drawerWidth = drawer.getBoundingClientRect().width;\r\n        drawer.style.transitionProperty = 'right';\r\n        drawer.style.transitionDuration = duration + 'ms';\r\n        drawer.style.right = drawerWidth + childWidth - 2 + 'px';\r\n        setTimeout(() => {\r\n            drawer.style.removeProperty('transition-property');\r\n            drawer.style.removeProperty('transition-duration');\r\n        }, duration);\r\n    }\r\n\r\n    //子メニューを閉じる関数\r\n    function childClose(){\r\n        drawerWidth = drawer.getBoundingClientRect().width;\r\n        drawer.style.transitionProperty = 'right';\r\n        drawer.style.transitionDuration = duration + 'ms';\r\n        drawer.style.right = drawerWidth - 1 + 'px';\r\n        setTimeout(() => {\r\n            drawer.style.removeProperty('transition-property');\r\n            drawer.style.removeProperty('transition-duration');\r\n        }, duration);\r\n    } \r\n\r\n    //孫メニューを開く関数\r\n    function grandchildOpen(){\r\n        drawerWidth = drawer.getBoundingClientRect().width;\r\n        drawer.style.transitionProperty = 'right';\r\n        drawer.style.transitionDuration = duration + 'ms';\r\n        drawer.style.right = drawerWidth + childWidth + grandchildWidth - 3 + 'px';\r\n        setTimeout(() => {\r\n            drawer.style.removeProperty('transition-property');\r\n            drawer.style.removeProperty('transition-duration');\r\n        }, duration);\r\n    }\r\n\r\n    //孫メニューを閉じる関数\r\n    function grandchildClose(){\r\n        drawerWidth = drawer.getBoundingClientRect().width;\r\n        drawer.style.transitionProperty = 'right';\r\n        drawer.style.transitionDuration = duration + 'ms';\r\n        drawer.style.right = drawerWidth + childWidth - 2 + 'px';\r\n        setTimeout(() => {\r\n            drawer.style.removeProperty('transition-property');\r\n            drawer.style.removeProperty('transition-duration');\r\n        }, duration);\r\n    } \r\n \r\n    // 子メニューを全て閉じる関数\r\n    function childAllClose(){\r\n        const childActives = drawer.querySelectorAll('.drawer__child--active');\r\n        childActives.forEach(function(childActive, index) {\r\n            childActive.classList.remove('drawer__child--active');\r\n        });\r\n    }\r\n\r\n    // 孫メニューを全て閉じる関数\r\n    function grandchildAllClose(){\r\n        const grandchildActives = drawer.querySelectorAll('.drawer__grandchild--active');\r\n        grandchildActives.forEach(function(grandchildActive, index) {\r\n            grandchildActive.classList.remove('drawer__grandchild--active');\r\n        });\r\n    }\r\n\r\n    //ハンバーガーボタンの処理\r\n    hamburger.onclick = function() {\r\n        const active = this.classList.contains('header__hamburger--active');\r\n    \r\n        if(!active){\r\n            drawerOpen();\r\n        } else {\r\n\r\n            drawerClose();\r\n            setTimeout(() => {\r\n                childAllClose();\r\n                grandchildAllClose();\r\n            }, duration);\r\n\r\n        }\r\n    \r\n    } \r\n\r\n    // 子メニューを展開するボタンの処理\r\n    const parentBtns = drawer.querySelectorAll('.js_drawer_link_parent');\r\n    parentBtns.forEach(function(parentBtn, index) {\r\n\r\n        parentBtn.onclick = function(e) {\r\n\r\n            const childActive = this.nextElementSibling.classList.contains('drawer__child--active');\r\n            childWidth = this.nextElementSibling.getBoundingClientRect().width;\r\n\r\n            if (!childActive){\r\n\r\n                childAllClose();\r\n                grandchildAllClose();\r\n                this.nextElementSibling.classList.add('drawer__child--active');\r\n                childOpen();\r\n\r\n            } else {\r\n\r\n                setTimeout(() => {\r\n                    childAllClose();\r\n                }, duration);\r\n                childClose();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        parentBtn.addEventListener('keydown', (e) => {\r\n\r\n            if(e.key == 'Enter') {\r\n\r\n                const childActive = parentBtn.nextElementSibling.classList.contains('drawer__child--active');\r\n                childWidth = parentBtn.nextElementSibling.getBoundingClientRect().width;\r\n    \r\n                if (!childActive){\r\n    \r\n                    childAllClose();\r\n                    grandchildAllClose();\r\n                    parentBtn.nextElementSibling.classList.add('drawer__child--active');\r\n                    childOpen();\r\n    \r\n                } else {\r\n    \r\n                    setTimeout(() => {\r\n                        childAllClose();\r\n                    }, duration);\r\n                    childClose();\r\n    \r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n    });\r\n\r\n    // 子メニューを閉じるボタンの処理\r\n    const childCloseBtns = drawer.querySelectorAll('.js_drawer_child_close');\r\n    childCloseBtns.forEach(function(childCloseBtn, index) {\r\n\r\n        childCloseBtn.onclick = function(e) {\r\n            \r\n            setTimeout(() => {\r\n                childAllClose();\r\n                grandchildAllClose();\r\n            }, duration);\r\n            childClose();\r\n            \r\n        }\r\n        \r\n        childCloseBtn.addEventListener('keydown', (e) => {\r\n\r\n            if(e.key == 'Enter') {\r\n\r\n                setTimeout(() => {\r\n                    childAllClose();\r\n                    grandchildAllClose();\r\n                }, duration);\r\n                childClose();  \r\n\r\n            }\r\n\r\n        });\r\n\r\n    });\r\n\r\n    // 孫メニューを展開するボタンの処理\r\n    const childParentBtns = drawer.querySelectorAll('.js_drawer_child_parent');\r\n    childParentBtns.forEach(function(childParentBtn, index) {\r\n\r\n        childParentBtn.onclick = function(e) {\r\n\r\n            const grandchildActive = this.nextElementSibling.classList.contains('drawer__grandchild--active');\r\n            grandchildWidth = this.nextElementSibling.getBoundingClientRect().width;\r\n\r\n            if (!grandchildActive){\r\n\r\n                grandchildAllClose();\r\n                this.nextElementSibling.classList.add('drawer__grandchild--active');\r\n                grandchildOpen();\r\n\r\n            } else {\r\n\r\n                setTimeout(() => {\r\n                    grandchildAllClose();\r\n                }, duration);\r\n                grandchildClose();\r\n\r\n            }\r\n\r\n        }\r\n        \r\n        childParentBtn.addEventListener('keydown', (e) => {\r\n\r\n            if(e.key == 'Enter') {\r\n\r\n                const grandchildActive = childParentBtn.nextElementSibling.classList.contains('drawer__grandchild--active');\r\n                grandchildWidth = childParentBtn.nextElementSibling.getBoundingClientRect().width;\r\n    \r\n                if (!grandchildActive){\r\n    \r\n                    grandchildAllClose();\r\n                    childParentBtn.nextElementSibling.classList.add('drawer__grandchild--active');\r\n                    grandchildOpen();\r\n    \r\n                } else {\r\n    \r\n                    setTimeout(() => {\r\n                        grandchildAllClose();\r\n                    }, duration);\r\n                    grandchildClose();\r\n    \r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n    });\r\n\r\n    // 孫メニューを閉じるボタンの処理\r\n    const grandchildCloseBtns = drawer.querySelectorAll('.js_drawer_grandchild_close');\r\n    grandchildCloseBtns.forEach(function(grandchildCloseBtn, index) {\r\n\r\n        grandchildCloseBtn.onclick = function(e) {\r\n            \r\n            setTimeout(() => {\r\n                grandchildAllClose();\r\n            }, duration);\r\n            grandchildClose();\r\n            \r\n        }\r\n        \r\n        grandchildCloseBtn.addEventListener('keydown', (e) => {\r\n\r\n            if(e.key == 'Enter') {\r\n\r\n                setTimeout(() => {\r\n                    grandchildAllClose();\r\n                }, duration);\r\n                grandchildClose();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    });\r\n       \r\n    //オーバーレイクリックの処理\r\n    overlay.onclick = function() {\r\n\r\n        const active = this.classList.contains('drawer-overlay--active');\r\n        if(active){\r\n            drawerClose();\r\n            childAllClose();\r\n            grandchildAllClose();\r\n        }\r\n    \r\n    }\r\n    \r\n    //ウィンドウリサイズの処理\r\n    window.addEventListener('resize',function(){\r\n    \r\n        if (window.matchMedia('(min-width:992px)').matches) {\r\n    \r\n            const active = hamburger.classList.contains('header__hamburger--active');\r\n            if(active){\r\n                drawerClose();\r\n                childAllClose();\r\n                grandchildAllClose();\r\n            }\r\n    \r\n        }\r\n    \r\n    });\r\n\r\n}\n\n//# sourceURL=webpack://wordpress_test/./src/js/module/hamburger-and-drawer.js?")},"./src/js/module/loading.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loading: function() { return /* binding */ loading; }\n/* harmony export */ });\n/*********************************\r\n    ローディング\r\n*********************************/\r\n\r\nfunction loading() {\r\n    \r\n    const loading = document.querySelector('.js_loading');\r\n    const progressBar = document.querySelector('.js_loading_bar');\r\n    const home = document.querySelector('.home');\r\n    \r\n    // ローディングを表示する関数\r\n    function loadingTime(duration = 1000, transition = 300) {\r\n        loading.classList.add('loading--active');\r\n        loading.style.removeProperty('transition-property');\r\n        loading.style.removeProperty('transition-duration');\r\n        window.globalFunction.bodyScrollStop();\r\n        progressBar.animate({\r\n            width: ['0', '100%'],\r\n        }, duration);\r\n        setTimeout(() => {\r\n            loading.classList.remove('loading--active');\r\n            loading.style.transitionProperty = 'opacity, visibility';\r\n            loading.style.transitionDuration = transition + 'ms';\r\n            window.globalFunction.bodyScrollStart();\r\n        }, duration);\r\n    }\r\n    \r\n    // アクセスした時1回だけ表示する処理\r\n    if (home) {\r\n        window.addEventListener('DOMContentLoaded', function() {\r\n            if (!sessionStorage.getItem('visited')) {\r\n                sessionStorage.setItem('visited', 'first');\r\n                loadingTime();\r\n                home.classList.add('home--active');\r\n            } else {\r\n                home.classList.add('home--active');\r\n            }\r\n        })\r\n    }\r\n\r\n    // ※テスト用 クリックしたとき表示する処理\r\n    const loadingTest = document.querySelector('.js_loading_test');\r\n    if (loadingTest) {\r\n        loadingTest.onclick = function() {\r\n            loadingTime();\r\n        }\r\n    }\r\n\r\n}\n\n//# sourceURL=webpack://wordpress_test/./src/js/module/loading.js?")},"./src/js/module/modal.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   modal: function() { return /* binding */ modal; }\n/* harmony export */ });\n/*********************************\r\n    モーダル\r\n*********************************/\r\n\r\nfunction modal() {\r\n    \r\n    // モーダルを開ける処理\r\n    const modalOpens = document.querySelectorAll('.js_modal_open');\r\n    modalOpens.forEach(function(modalBtn, index) {\r\n\r\n        modalBtn.onclick = function() {\r\n\r\n            const modalBtnId = this.dataset.modal;\r\n            document.querySelector('#' + modalBtnId).showModal();\r\n            document.querySelector('#' + modalBtnId).classList.add('modal--active');\r\n            window.globalFunction.bodyScrollStop();\r\n\r\n        }\r\n\r\n    });\r\n\r\n    // モーダルを閉じる関数\r\n    function modalClose(){\r\n        const modalActives = document.querySelectorAll('.modal--active');\r\n        modalActives.forEach(function(modalActive, index) {\r\n\r\n            modalActive.close();\r\n            modalActive.classList.remove('modal--active');\r\n            window.globalFunction.bodyScrollStart();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    // 閉じるボタンの処理\r\n    const modalCloseButtons = document.querySelectorAll('.js_modal_close');\r\n    modalCloseButtons.forEach(function(modalCloseButton, index) {\r\n\r\n        modalCloseButton.onclick = function() {\r\n\r\n            modalClose();\r\n\r\n        }\r\n\r\n    });\r\n\r\n    // オーバーレイクリック時の処理\r\n    const modals = document.querySelectorAll('.js_modal');\r\n    modals.forEach(function(modal, index) {\r\n\r\n        modal.addEventListener('click', (e) => {\r\n        \r\n            if (!e.target.closest('.js_modal_box')) {\r\n        \r\n                modalClose();\r\n        \r\n            }\r\n    \r\n        })\r\n\r\n    });\r\n\r\n    // Escapeボタンを押したときの時の処理\r\n    document.addEventListener('keydown', (e) => {\r\n\r\n        if (e.key == 'Escape') {\r\n\r\n            modalClose();\r\n\r\n        }\r\n\r\n    });\r\n\r\n}\n\n//# sourceURL=webpack://wordpress_test/./src/js/module/modal.js?")},"./src/js/module/pagetop.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pagetop: function() { return /* binding */ pagetop; }\n/* harmony export */ });\n/*********************************\r\n    ページトップ\r\n*********************************/\r\n\r\nfunction pagetop() {\r\n\r\n    const pagetopBtn = document.querySelector('.js_pagetop');\r\n\r\n    // スムーズにトップへ戻る処理\r\n    pagetopBtn.onclick = function() {\r\n        window.scroll({ top: 0, behavior: 'smooth' });\r\n    }\r\n    \r\n    window.addEventListener('scroll', function() {\r\n        const scrollY = window.pageYOffset;\r\n        const windowH = window.innerHeight;\r\n        const footerT = document.querySelector('footer').getBoundingClientRect().top;\r\n        const spaceB = (scrollY + windowH) - (scrollY + footerT)\r\n    \r\n        //スクロールするとボタンが現れる処理\r\n        if (scrollY >= 1) {\r\n            pagetopBtn.classList.add('pagetop--show');\r\n        } else {\r\n            pagetopBtn.classList.remove('pagetop--show');\r\n        }\r\n    \r\n        //フッターに重ならないよう止まる処理\r\n        if(spaceB >= 0){\r\n            pagetopBtn.style.bottom = spaceB + 20 + 'px';\r\n        } else {\r\n            pagetopBtn.style.removeProperty('bottom');\r\n        }\r\n    \r\n    });\r\n    \r\n}\n\n//# sourceURL=webpack://wordpress_test/./src/js/module/pagetop.js?")},"./src/js/module/plugin.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   plugin: function() { return /* binding */ plugin; }\n/* harmony export */ });\n/*********************************\r\n    プラグイン\r\n*********************************/\r\n\r\nfunction plugin() {\r\n\r\n  /* Splide */\r\n  const splide = document.querySelector(\'.splide\');\r\n  if (splide) {\r\n    new Splide(".splide", {\r\n      type: "loop", // ループ\r\n      autoplay: true, // 自動再生\r\n      interval: 3000, // 自動再生の間隔\r\n      pauseOnHover: false, // カーソルが乗ってもスクロールを停止させない\r\n      pauseOnFocus: false, // 矢印をクリックしてもスクロールを停止させない\r\n      padding: "calc((100% - 1200px) / 2)", // 左右の隙間\r\n      classes: {\r\n        pagination: "splide__pagination slideshow__pagination",\r\n        page: "splide__pagination__page slideshow__page",\r\n      },\r\n    }).mount();\r\n  }\r\n\r\n}\n\n//# sourceURL=webpack://wordpress_test/./src/js/module/plugin.js?')},"./src/js/module/tab.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tab: function() { return /* binding */ tab; }\n/* harmony export */ });\n/*********************************\r\n    タブ\r\n*********************************/\r\n\r\nfunction tab() {\r\n\r\n    // タブ切り替えの処理\r\n    const tabs = document.querySelectorAll('.js_tab');\r\n    tabs.forEach(function(tab, index) {\r\n\r\n        const tabBtns = tab.querySelectorAll('.js_tab-navigation_item');\r\n        tabBtns.forEach(function(tabBtn, index) {\r\n\r\n            tabBtn.onclick = function() {\r\n\r\n                tab.querySelector('.tab-navigation__item--active').inert = false;\r\n                tab.querySelector('.tab-navigation__item--active').classList.remove('tab-navigation__item--active');\r\n                this.inert = true;\r\n                this.classList.add('tab-navigation__item--active');\r\n                tab.querySelector('.tab__item--active').classList.remove('tab__item--active');\r\n                tab.querySelectorAll('.tab__item')[index].classList.add('tab__item--active');\r\n\r\n            }\r\n\r\n        });\r\n\r\n    });\r\n\r\n}\n\n//# sourceURL=webpack://wordpress_test/./src/js/module/tab.js?")},"./src/js/module/wp-add-class.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wpAddClass: function() { return /* binding */ wpAddClass; }\n/* harmony export */ });\n/*********************************\r\n    WP用 クラスを与える\r\n*********************************/\r\n\r\nfunction wpAddClass() {\r\n\r\n    // グローバルメニューにドロップダウンクラスを与える\r\n    const dropdown = document.querySelector('.dropdown');\r\n\r\n    const dropdownItems = dropdown.querySelectorAll(':scope>li');\r\n    dropdownItems.forEach(function(dropdownItem, index) {\r\n\r\n        dropdownItem.classList.add('dropdown__item');\r\n        \r\n    });\r\n\r\n    const dropdownLinks = dropdown.querySelectorAll('.dropdown__item');\r\n    dropdownLinks.forEach(function(dropdownLink, index) {\r\n\r\n        const childrenAs = dropdownLink.querySelectorAll(':scope>a');\r\n        childrenAs.forEach(function(childrenA, index) {\r\n\r\n            childrenA.classList.add('dropdown__link');\r\n\r\n            if(!childrenA.hasAttribute(\"href\")) {\r\n\r\n                childrenA.setAttribute(\"tabindex\",\"0\");\r\n                childrenA.insertAdjacentHTML('beforeend', '<i class=\"dropdown__link-icon fa-solid fa-angle-down\"></i>');\r\n                childrenA.classList.add('js_dropdown_link_parent');\r\n\r\n            }\r\n            \r\n        });\r\n\r\n        const childrenUls = dropdownLink.querySelectorAll(':scope>ul');\r\n        childrenUls.forEach(function(childrenUl, index) {\r\n\r\n            childrenUl.classList.add('dropdown__child');\r\n            \r\n        });\r\n        \r\n    });\r\n\r\n    const dropdownChildItems = dropdown.querySelectorAll('.dropdown__child');\r\n    dropdownChildItems.forEach(function(dropdownChildItem, index) {\r\n\r\n        const childrenLis = dropdownChildItem.querySelectorAll(':scope>li');\r\n        childrenLis.forEach(function(childrenLi, index) {\r\n\r\n            childrenLi.classList.add('dropdown__child-item');\r\n            \r\n        });\r\n        \r\n    });\r\n\r\n    const dropdownChildLinks = dropdown.querySelectorAll('.dropdown__child-item');\r\n    dropdownChildLinks.forEach(function(dropdownChildLink, index) {\r\n\r\n        const childrenAs = dropdownChildLink.querySelectorAll(':scope>a');\r\n        childrenAs.forEach(function(childrenA, index) {\r\n\r\n            childrenA.classList.add('dropdown__child-link');\r\n\r\n            if(!childrenA.hasAttribute(\"href\")) {\r\n\r\n                childrenA.setAttribute(\"tabindex\",\"0\");\r\n                childrenA.insertAdjacentHTML('beforeend', '<i class=\"dropdown__child-icon fa-solid fa-angle-right\"></i>');\r\n                childrenA.classList.add('js_dropdown_child_parent');\r\n\r\n            }\r\n            \r\n        });\r\n\r\n        const childrenUls = dropdownChildLink.querySelectorAll(':scope>ul');\r\n        childrenUls.forEach(function(childrenUl, index) {\r\n\r\n            childrenUl.classList.add('dropdown__grandchild');\r\n            \r\n        });\r\n        \r\n    });\r\n\r\n    const dropdownGrandchildItems = dropdown.querySelectorAll('.dropdown__grandchild');\r\n    dropdownGrandchildItems.forEach(function(dropdownGrandchildItem, index) {\r\n\r\n        const childrenLis = dropdownGrandchildItem.querySelectorAll(':scope>li');\r\n        childrenLis.forEach(function(childrenLi, index) {\r\n\r\n            childrenLi.classList.add('dropdown__grandchild-item');\r\n            \r\n        });\r\n        \r\n    });\r\n\r\n    const dropdownGrandchildLinks = dropdown.querySelectorAll('.dropdown__grandchild-item');\r\n    dropdownGrandchildLinks.forEach(function(dropdownGrandchildLink, index) {\r\n\r\n        const childrenAs = dropdownGrandchildLink.querySelectorAll(':scope>a');\r\n        childrenAs.forEach(function(childrenA, index) {\r\n\r\n            childrenA.classList.add('dropdown__grandchild-link');\r\n            \r\n        });\r\n        \r\n    });\r\n\r\n    // グローバルメニューにドロワークラスを与える\r\n    const drawer = document.querySelector('.drawer');\r\n\r\n    const drawerItems = drawer.querySelectorAll(':scope>li');\r\n    drawerItems.forEach(function(drawerItem, index) {\r\n\r\n        drawerItem.classList.add('drawer__item');\r\n        \r\n    });\r\n\r\n    const drawerLinks = drawer.querySelectorAll('.drawer__item');\r\n    drawerLinks.forEach(function(drawerLink, index) {\r\n\r\n        const childrenAs = drawerLink.querySelectorAll(':scope>a');\r\n        childrenAs.forEach(function(childrenA, index) {\r\n\r\n            childrenA.classList.add('drawer__link');\r\n\r\n            if(!childrenA.hasAttribute(\"href\")) {\r\n\r\n                childrenA.setAttribute(\"tabindex\",\"0\");\r\n                childrenA.insertAdjacentHTML('beforeend', '<i class=\"drawer__icon fa-solid fa-angle-right\"></i>');\r\n                childrenA.classList.add('js_drawer_link_parent');\r\n\r\n            }\r\n            \r\n        });\r\n\r\n        const childrenUls = drawerLink.querySelectorAll(':scope>ul');\r\n        childrenUls.forEach(function(childrenUl, index) {\r\n\r\n            childrenUl.classList.add('drawer__child');\r\n            childrenUl.insertAdjacentHTML('afterbegin', '<a tabindex=\"0\" class=\"drawer__child-link js_drawer_child_close\" aria-label=\"子メニューを閉じる\"><i class=\"drawer__icon fa-solid fa-angle-left\"></i></a>');\r\n            \r\n        });\r\n        \r\n    });\r\n\r\n    const drawerChildItems = drawer.querySelectorAll('.drawer__child');\r\n    drawerChildItems.forEach(function(drawerChildItem, index) {\r\n\r\n        const childrenLis = drawerChildItem.querySelectorAll(':scope>li');\r\n        childrenLis.forEach(function(childrenLi, index) {\r\n\r\n            childrenLi.classList.add('drawer__child-item');\r\n            \r\n        });\r\n        \r\n    });\r\n\r\n    const drawerChildLinks = drawer.querySelectorAll('.drawer__child-item');\r\n    drawerChildLinks.forEach(function(drawerChildLink, index) {\r\n\r\n        const childrenAs = drawerChildLink.querySelectorAll(':scope>a');\r\n        childrenAs.forEach(function(childrenA, index) {\r\n\r\n            childrenA.classList.add('drawer__child-link');\r\n\r\n            if(!childrenA.hasAttribute(\"href\")) {\r\n\r\n                childrenA.setAttribute(\"tabindex\",\"0\");\r\n                childrenA.insertAdjacentHTML('beforeend', '<i class=\"drawer__icon fa-solid fa-angle-right\"></i>');\r\n                childrenA.classList.add('js_drawer_child_parent');\r\n\r\n            }\r\n            \r\n        });\r\n\r\n        const childrenUls = drawerChildLink.querySelectorAll(':scope>ul');\r\n        childrenUls.forEach(function(childrenUl, index) {\r\n\r\n            childrenUl.classList.add('drawer__grandchild');\r\n            childrenUl.insertAdjacentHTML('afterbegin', '<a tabindex=\"0\" class=\"drawer__child-link js_drawer_grandchild_close\" aria-label=\"孫メニューを閉じる\"><i class=\"drawer__icon fa-solid fa-angle-left\"></i></a>');\r\n            \r\n        });\r\n        \r\n    });\r\n\r\n    const drawerGrandchildItems = drawer.querySelectorAll('.drawer__grandchild');\r\n    drawerGrandchildItems.forEach(function(drawerGrandchildItem, index) {\r\n\r\n        const childrenLis = drawerGrandchildItem.querySelectorAll(':scope>li');\r\n        childrenLis.forEach(function(childrenLi, index) {\r\n\r\n            childrenLi.classList.add('drawer__grandchild-item');\r\n            \r\n        });\r\n        \r\n    });\r\n\r\n    const drawerGrandchildLinks = drawer.querySelectorAll('.drawer__grandchild-item');\r\n    drawerGrandchildLinks.forEach(function(drawerGrandchildLink, index) {\r\n\r\n        const childrenAs = drawerGrandchildLink.querySelectorAll(':scope>a');\r\n        childrenAs.forEach(function(childrenA, index) {\r\n\r\n            childrenA.classList.add('drawer__grandchild-link');\r\n            \r\n        });\r\n        \r\n    });\r\n\r\n    // フッターナビメニューにクラスを与える\r\n    const footerNavList = document.querySelector('.footer__nav-list');\r\n\r\n    const footerNavListItems = footerNavList.querySelectorAll('li');\r\n    footerNavListItems.forEach(function(footerNavListItem, index) {\r\n\r\n        footerNavListItem.classList.add('footer__nav-item');\r\n        \r\n    });\r\n\r\n    const footerNavListLinks = footerNavList.querySelectorAll('a');\r\n    footerNavListLinks.forEach(function(footerNavListLink, index) {\r\n\r\n        footerNavListLink.classList.add('footer__nav-link');\r\n        \r\n    });\r\n    \r\n    // フォームにクラスを与える\r\n\r\n    const formRadio = document.querySelector('.form-radio');\r\n    if (formRadio) {\r\n\r\n        const formRadioIcons = formRadio.querySelectorAll('.wpcf7-list-item-label');\r\n        formRadioIcons.forEach(function(formRadioIcon, index) {\r\n\r\n            formRadioIcon.insertAdjacentHTML('beforebegin', '<span class=\"form-radio__icon\"></span>');\r\n        });\r\n        \r\n        const formCheckbox = document.querySelector('.form-checkbox');\r\n\r\n        const formCheckboxIcons = formCheckbox.querySelectorAll('.wpcf7-list-item-label');\r\n        formCheckboxIcons.forEach(function(formCheckboxIcon, index) {\r\n\r\n            formCheckboxIcon.insertAdjacentHTML('beforebegin', '<span class=\"form-checkbox__icon\"></span>');\r\n        });\r\n    }\r\n    \r\n}\n\n//# sourceURL=webpack://wordpress_test/./src/js/module/wp-add-class.js?")},"./src/js/module/wp-correction.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wpCorrection: function() { return /* binding */ wpCorrection; }\n/* harmony export */ });\n/*********************************\r\n    WP用 クラスを与える\r\n*********************************/\r\n\r\nfunction wpCorrection() {\r\n\r\n    //ContactForm7で送信ボタンを押したときにエラーメッセージが出るようにする\r\n    if (document.querySelector(".wpcf7-form")) {\r\n        document.querySelector(".wpcf7-form").classList.add("hide_error_message");\r\n\r\n        document.querySelectorAll(".wpcf7-confirm, .wpcf7-submit").forEach(function(elm){\r\n            elm.addEventListener("click", function(){\r\n                document.querySelector(".wpcf7-form").classList.remove("hide_error_message");\r\n            });\r\n        });\r\n    }\r\n\r\n}\n\n//# sourceURL=webpack://wordpress_test/./src/js/module/wp-correction.js?')}},__webpack_module_cache__={};function __webpack_require__(r){var n=__webpack_module_cache__[r];return void 0!==n||(n=__webpack_module_cache__[r]={exports:{}},__webpack_modules__[r](n,n.exports,__webpack_require__)),n.exports}__webpack_require__.d=function(r,n){for(var e in n)__webpack_require__.o(n,e)&&!__webpack_require__.o(r,e)&&Object.defineProperty(r,e,{enumerable:!0,get:n[e]})},__webpack_require__.o=function(r,n){return Object.prototype.hasOwnProperty.call(r,n)},__webpack_require__.r=function(r){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/js/main.js")}();